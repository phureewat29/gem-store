version: '3.9'

services:
  gateway:
    container_name: gateway_service
    build:
      context: .
      target: ${NODE_ENV}
      dockerfile: ./apps/gateway/Dockerfile
    env_file:
      - .env
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    depends_on:
      - user
      - ledger
      - postgres
      - rabbit
  user:
    container_name: user_service
    build:
      context: .
      target: ${NODE_ENV}
      dockerfile: ./apps/user/Dockerfile
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbit
  ledger:
    container_name: ledger_service
    build:
      context: .
      target: ${NODE_ENV}
      dockerfile: ./apps/ledger/Dockerfile
    env_file:
      - .env
    depends_on:
      - user
      - postgres
      - rabbit
  rabbit:
    container_name: rabbit
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_MQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_MQ_PASSWORD}
    env_file:
      - .env
    ports:
      - "${RABBIT_MQ_PORT}:5672"
      - "${RABBIT_MQ_MANAGER_PORT}:15672"
  postgres:
    container_name: postgres
    image: postgres:14
    environment:
      - POSTGRES_USER=${POSTGRES_DB_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - PGDATA=/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    ports:
      - "${POSTGRES_DB_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one
    ports:
      - "5775:5775"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    environment:
      - JAEGER_DISABLED=true
  db_manager:
    container_name: db_manager
    image: adminer
    ports:
      - '${DB_MANAGER_PORT}:8080'

volumes:
  postgres-data:
    driver: local

networks:
  default:
    driver: bridge
